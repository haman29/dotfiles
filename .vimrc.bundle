"vunlde.vimで管理してるpluginを読み込む

filetype off

if has('vim_starting')
  set runtimepath+=~/.vim/bundle/neobundle.vim
  call neobundle#rc(expand('~/.vim/bundle/'))
endif

if !isdirectory(expand("~/.vim/bundle/neobundle.vim"))
  !mkdir -p ~/.vim/bundle
  !git clone https://github.com/Shougo/neobundle.vim ~/.vim/bundle/neobundle.vim
  let s:bootstrap=1
endif

" vim plugin 管理
NeoBundle 'Shougo/neobundle.vim'

" NERD_commenter.vim :最強コメント処理 (<Leader>c<space>でコメントをトグル)
NeoBundle 'scrooloose/nerdcommenter.git'

" Align : 高機能整形・桁揃えプラグイン
NeoBundle 'Align'

" surround.vim : テキストを括弧で囲む／削除する
NeoBundle 'tpope/vim-surround'

" operator-replace : yankしたものでreplaceする
NeoBundle 'kana/operator-replace'
NeoBundle 'kana/vim-operator-user.git'

if has("lua")
  NeoBundleLazy 'Shougo/neocomplete', { 'autoload' : {
        \ 'insert' : 1,
        \ }}
endif

" neocomplcacheのsinpet補完
NeoBundleLazy 'Shougo/neosnippet', {
      \ 'autoload' : {
      \ 'commands' : ['NeoSnippetEdit', 'NeoSnippetSource'],
      \ 'filetypes' : 'snippet',
      \ 'insert' : 1,
      \ 'unite_sources' : ['snippet', 'neosnippet/user', 'neosnippet/runtime'],
      \ }}

" vim-smartword : 単語移動がスマートな感じで
NeoBundle 'smartword'

" camelcasemotion : CamelCaseやsnake_case単位でのワード移動
NeoBundle 'camelcasemotion'

" matchit.vim : 「%」による対応括弧へのカーソル移動機能を拡張
NeoBundle 'matchit.zip'

" eregex.vim : vimの正規表現をrubyやperlの正規表現な入力でできる :%S/perlregex/
NeoBundle 'eregex.vim'

" open-browser.vim : カーソルの下のURLを開くor単語を検索エンジンで検索
NeoBundle 'tyru/open-browser.vim'

" quickrun.vim : 編集中のファイルを簡単に実行できるプラグイン
NeoBundle 'thinca/vim-quickrun'

" perldocやphpmanual等のリファレンスをvim上で見る
NeoBundle 'thinca/vim-ref'

" vim-ruby : VimでRubyを扱う際の最も基本的な拡張機能
NeoBundle 'vim-ruby/vim-ruby'

" エラーがある場所をhilight
NeoBundle 'errormarker.vim'

" markdown
NeoBundle 'tpope/vim-markdown'

" haml
NeoBundle 'tpope/vim-haml'

" coffee script
" NeoBundle 'kchmck/vim-coffee-script'

" syntax checking plugins exist for eruby, haml, html, javascript, php, python, ruby and sass.
NeoBundle 'scrooloose/syntastic'

" vimの文字化け対策
" NeoBundle 'banyan/recognize_charcode.vim'

" filer
NeoBundle 'Shougo/vimfiler'

" vimshell : vimのshell
NeoBundle 'Shougo/vimshell.git'

" vimproc : vimから非同期実行。vimshellで必要
NeoBundle 'Shougo/vimproc', {
      \ 'build' : {
      \     'mac' : 'make -f make_mac.mak',
      \     'unix' : 'make -f make_unix.mak',
      \    },
      \ }

" ステータスラインをカッコよくする
NeoBundle 'Lokaltog/powerline', { 'rtp' : 'powerline/bindings/vim'}

" クリップボードを共有
NeoBundle 'kana/vim-fakeclip'

" colorschema
NeoBundle 'altercation/vim-colors-solarized'

" Unite
NeoBundle 'Shougo/unite.vim'
NeoBundle 'Shougo/neomru.vim'

" zendcoding
NeoBundle 'mattn/emmet-vim'

" ack
NeoBundle 'ack.vim'

" % 移動
NeoBundle 'edsono/vim-matchit'

" rails.vim
NeoBundle 'tpope/vim-rails', { 'autoload' : {
      \ 'filetypes' : ['haml', 'ruby', 'eruby'] }}

" vim-endwise (def aaa\n でendを挿入)
NeoBundle 'alpaca-tc/vim-endwise.git'

NeoBundle 'briancollins/vim-jst'


" SublimeTextライクな置換
" NeoBundle 'terryma/vim-multiple-cursors'

if exists("s:bootstrap") && s:bootstrap
  unlet s:bootstrap
  BundleInstall
endif

filetype plugin indent on
